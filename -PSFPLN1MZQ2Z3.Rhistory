library(viridis)
library(viridis)
station_territory_census_pal <- colorFactor(palette = viridis(256),
na.color = "#CCCCCC",
domain = station_territory_census_sf$total_pop_estimate_w)
station_territory_census_leaflet <- leaflet(station_territory_census_sf,
width = "100%",
height = "800px") %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(
fillColor   = ~ station_territory_census_pal(total_pop_estimate_w),
color       = "#444444",
weight      = 1,
fillOpacity = 0.5,
popup       = ~ paste0(station_number, " Population: ", round(total_pop_estimate_w), " ±", round(total_pop_moe_w)),
label       = ~ station_number,
highlightOptions = highlightOptions(
weight = 3,
color = "#666",
bringToFront = TRUE
)
) %>%
addFullscreenControl(pseudoFullscreen = FALSE)
station_territory_census_leaflet
?st_area
#' Area‑weighted interpolation of ACS estimates & MOEs
#'
#' @param census_sf sf with census polygons; colnames ending in `_estimate` and `_moe`
#' @param target_sf sf with target zones; must contain grouping variables
#' @param group_cols unquoted names of columns in target_sf to group by (e.g. c(battalion, station_number))
#' @param crs_equal_area numeric EPSG code for equal‑area projection (default 5070)
#' @return A tibble with one row per group and summed <var>_estimate and <var>_moe (90% CI).
census_areal_interpolation <- function(census_sf,
target_sf,
group_cols,
crs_equal_area = 5070) {
target_crs <- st_crs(target_sf)
estimate_cols <- census_sf %>% select(ends_with("_estimate")) %>% names()
moe_cols      <- census_sf %>% select(ends_with("_moe"))      %>% names()
census_sf <- census_sf %>%
st_transform(crs_equal_area) %>%
mutate(census_geo_area = st_area(geometry))
target_sf <- target_sf %>%
st_transform(crs_equal_area)
hits <- st_intersects(census_sf, target_sf)
census_sf <- census_sf[lengths(hits) > 0, ]
target_sf <- target_sf[unique(unlist(hits)), ]
census_sf <- st_make_valid(census_sf)
target_sf <- st_make_valid(target_sf)
intersection_sf <- st_intersection(census_sf %>% select(GEOID, census_geo_area), target_sf) %>%
mutate(
intersection_area = st_area(geometry),
prop_census_geo_in_target_geo = as.numeric(intersection_area / census_geo_area)
) %>%
left_join(st_drop_geometry(census_sf %>% select(-census_geo_area)), by = "GEOID") %>%
mutate(
across(
all_of(estimate_cols),
~ . * prop_census_geo_in_target_geo,
.names = "{.col}_w"
),
across(
all_of(moe_cols),
~ . * prop_census_geo_in_target_geo,
.names = "{.col}_w"
)
)
intersection_sf %>%
group_by(across(all_of(group_cols))) %>%
summarise(
across(matches("_estimate_w$"), sum, .names = "{.col}"),
across(matches("_moe_w$"), ~ sqrt(sum(.^2, na.rm = TRUE)), .names = "{.col}"),
.groups = "drop"
) %>%
mutate(area = st_area(geometry)) %>%
st_transform(crs = target_crs)
}
station_territory_census_sf <- census_areal_interpolation(census_sf = cobb_census_bg_wide_sf,
target_sf = gis_station_territories_sf,
group_cols = c("battalion", "station_number"))
View(station_territory_census_sf)
station_territory_census_sf <- census_areal_interpolation(census_sf = cobb_census_bg_wide_sf,
target_sf = gis_station_territories_sf,
group_cols = c("battalion", "station_number")) %>%
mutate(area_sqmi = area / 2.589988e6,
population_density_sqmi = total_pop_estimate_w / area_sqmi,
population_density_moe_sqmi = total_pop_moe_w / area_sqmi)
station_territory_census_sf <- census_areal_interpolation(
census_sf = cobb_census_bg_wide_sf,
target_sf = gis_station_territories_sf,
group_cols = c("battalion", "station_number")
) %>%
mutate(
area_sqmi = area / 2.589988e6,
population_density_sqmi = total_pop_estimate_w / area_sqmi,
population_density_moe_sqmi = total_pop_moe_w / area_sqmi
)
districts_census_sf <- census_areal_interpolation(
census_sf = cobb_census_bg_wide_sf,
target_sf = gis_districts_sf,
group_cols = c("comm_d")
)  %>%
mutate(
area_sqmi = area / 2.589988e6,
population_density_sqmi = total_pop_estimate_w / area_sqmi,
population_density_moe_sqmi = total_pop_moe_w / area_sqmi
)
station_territory_census_pal <- colorFactor(palette = viridis(256),
na.color = "#CCCCCC",
domain = station_territory_census_sf$total_pop_estimate_w)
station_territory_census_leaflet <- leaflet(station_territory_census_sf,
width = "100%",
height = "800px") %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(
fillColor   = ~ station_territory_census_pal(total_pop_estimate_w),
color       = "#444444",
weight      = 1,
fillOpacity = 0.5,
popup       = ~ paste0(station_number,
"\nPopulation: ", round(total_pop_estimate_w), " ±", round(total_pop_moe_w),
"\nArea (sq mi): ", area_sqmi,
"\nPopulation Density: ", population_density_sqmi, " ±", round(population_density_moe_sqmi)"),
label       = ~ station_number,
highlightOptions = highlightOptions(
weight = 3,
color = "#666",
station_territory_census_pal <- colorFactor(palette = viridis(256),
na.color = "#CCCCCC",
domain = station_territory_census_sf$population_density_sqmi)
station_territory_census_leaflet <- leaflet(station_territory_census_sf,
width = "100%",
height = "800px") %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(
fillColor   = ~ station_territory_census_pal(population_density_sqmi),
color       = "#444444",
weight      = 1,
fillOpacity = 0.5,
popup       = ~ paste0(station_number,
"\nPopulation: ", round(total_pop_estimate_w), " ±", round(total_pop_moe_w),
"\nArea (sq mi): ", area_sqmi,
"\nPopulation Density: ", population_density_sqmi, " ±", round(population_density_moe_sqmi)"),
label       = ~ station_number,
highlightOptions = highlightOptions(
weight = 3,
color = "#666",
station_territory_census_leaflet <- leaflet(station_territory_census_sf,
width = "100%",
height = "800px") %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(
fillColor   = ~ station_territory_census_pal(population_density_sqmi),
color       = "#444444",
weight      = 1,
fillOpacity = 0.5,
popup       = ~ paste0(station_number,
"\nPopulation: ", round(total_pop_estimate_w), " ±", round(total_pop_moe_w),
"\nArea (sq mi): ", area_sqmi,
"\nPopulation Density: ", population_density_sqmi, " ±", round(population_density_moe_sqmi)),
label       = ~ station_number,
highlightOptions = highlightOptions(
weight = 3,
color = "#666",
bringToFront = TRUE
)
) %>%
addFullscreenControl(pseudoFullscreen = FALSE)
station_territory_census_pal <- colorFactor(palette = viridis(256),
na.color = "#CCCCCC",
domain = station_territory_census_sf$population_density_sqmi)
station_territory_census_leaflet <- leaflet(station_territory_census_sf,
width = "100%",
height = "800px") %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(
fillColor   = ~ station_territory_census_pal(population_density_sqmi),
color       = "#444444",
weight      = 1,
fillOpacity = 0.5,
popup       = ~ paste0(station_number,
"\nPopulation: ", round(total_pop_estimate_w), " ±", round(total_pop_moe_w),
"\nArea (sq mi): ", area_sqmi,
"\nPopulation Density: ", population_density_sqmi, " ±", round(population_density_moe_sqmi)),
label       = ~ station_number,
highlightOptions = highlightOptions(
weight = 3,
color = "#666",
bringToFront = TRUE
)
) %>%
addFullscreenControl(pseudoFullscreen = FALSE)
station_territory_census_leaflet
station_territory_census_pal <- colorFactor(palette = viridis(256),
na.color = "#CCCCCC",
domain = station_territory_census_sf$population_density_sqmi)
station_territory_census_leaflet <- leaflet(station_territory_census_sf,
width = "100%",
height = "800px") %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(
fillColor   = ~ station_territory_census_pal(population_density_sqmi),
color       = "#444444",
weight      = 1,
fillOpacity = 0.5,
popup       = ~ paste0(station_number,
"\nPopulation: ", round(total_pop_estimate_w), " ±", round(total_pop_moe_w),
"\nArea (sq mi): ", area_sqmi,
"\nPopulation Density: ", population_density_sqmi, " ±", round(population_density_moe_sqmi)),
label       = ~ station_number,
highlightOptions = highlightOptions(
weight = 3,
color = "#666",
bringToFront = TRUE
)
) %>%
addLegend(
position = "bottomright",
pal      = station_territory_census_pal,
values   = ~ population_density_sqmi,
title    = "Population Density",
opacity  = 1
) %>%
addFullscreenControl(pseudoFullscreen = FALSE)
station_territory_census_leaflet
station_territory_census_breaks <- pretty(station_territory_census_sf$population_density_sqmi, n = 6)
station_territory_census_pal <- colorBin(
palette = viridis(256),
na.color = "#CCCCCC",
bins = station_territory_census_breaks,
domain = station_territory_census_sf$population_density_sqmi
)
station_territory_census_leaflet <- leaflet(station_territory_census_sf,
width = "100%",
height = "800px") %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(
fillColor   = ~ station_territory_census_pal(population_density_sqmi),
color       = "#444444",
weight      = 1,
fillOpacity = 0.5,
popup       = ~ paste0(station_number,
"\nPopulation: ", round(total_pop_estimate_w), " ±", round(total_pop_moe_w),
"\nArea (sq mi): ", area_sqmi,
"\nPopulation Density: ", population_density_sqmi, " ±", round(population_density_moe_sqmi)),
label       = ~ station_number,
highlightOptions = highlightOptions(
weight = 3,
color = "#666",
bringToFront = TRUE
)
) %>%
addLegend(
position = "bottomright",
pal      = station_territory_census_pal,
values   = ~ population_density_sqmi,
title    = "Population Density",
opacity  = 1
) %>%
addFullscreenControl(pseudoFullscreen = FALSE)
station_territory_census_leaflet
station_territory_census_breaks <- pretty(station_territory_census_sf$population_density_sqmi, n = 10)
station_territory_census_pal <- colorBin(
palette = viridis(256),
na.color = "#CCCCCC",
bins = station_territory_census_breaks,
domain = station_territory_census_sf$population_density_sqmi
)
station_territory_census_leaflet <- leaflet(station_territory_census_sf,
width = "100%",
height = "800px") %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(
fillColor   = ~ station_territory_census_pal(population_density_sqmi),
color       = "#444444",
weight      = 1,
fillOpacity = 0.5,
popup       = ~ paste0(station_number,
"\nPopulation: ", round(total_pop_estimate_w), " ±", round(total_pop_moe_w),
"\nArea (sq mi): ", area_sqmi,
"\nPopulation Density: ", population_density_sqmi, " ±", round(population_density_moe_sqmi)),
label       = ~ station_number,
highlightOptions = highlightOptions(
weight = 3,
color = "#666",
bringToFront = TRUE
)
) %>%
addLegend(
position = "bottomright",
pal      = station_territory_census_pal,
values   = ~ population_density_sqmi,
title    = "Population Density",
opacity  = 1
) %>%
addFullscreenControl(pseudoFullscreen = FALSE)
station_territory_census_leaflet
station_territory_census_breaks <- pretty(station_territory_census_sf$population_density_sqmi, n = 10)
station_territory_census_pal <- colorBin(
palette = viridis(256),
na.color = "#CCCCCC",
bins = station_territory_census_breaks,
domain = station_territory_census_sf$population_density_sqmi
)
station_territory_census_leaflet <- leaflet(station_territory_census_sf,
width = "100%",
height = "800px") %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(
fillColor   = ~ station_territory_census_pal(population_density_sqmi),
color       = "#444444",
weight      = 1,
fillOpacity = 0.5,
popup       = ~ paste0("<br\>Station: ", station_number,
station_territory_census_breaks <- pretty(station_territory_census_sf$population_density_sqmi, n = 10)
station_territory_census_pal <- colorBin(
palette = viridis(256),
na.color = "#CCCCCC",
bins = station_territory_census_breaks,
domain = station_territory_census_sf$population_density_sqmi
)
station_territory_census_leaflet <- leaflet(station_territory_census_sf,
width = "100%",
height = "800px") %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(
fillColor   = ~ station_territory_census_pal(population_density_sqmi),
color       = "#444444",
weight      = 1,
fillOpacity = 0.5,
popup       = ~ paste0("<br\>Station: ", station_number,
station_territory_census_leaflet <- leaflet(station_territory_census_sf,
width = "100%",
height = "800px") %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(
fillColor   = ~ station_territory_census_pal(population_density_sqmi),
color       = "#444444",
weight      = 1,
fillOpacity = 0.5,
popup       = ~ paste0("<br>Station: ", station_number,
"<br>Population: ", formatC(round(total_pop_estimate_w), big.mark=','), " ±", round(total_pop_moe_w),
"<br>Area (sq mi): ", formatC(round(area_sqmi), big.mark=','),
"<br>Population Density: ", formatC(round(population_density_sqmi), big.mark=','), " ±", round(population_density_moe_sqmi)),
label       = ~ station_number,
highlightOptions = highlightOptions(
weight = 3,
color = "#666",
bringToFront = TRUE
)
) %>%
addLegend(
position = "bottomright",
pal      = station_territory_census_pal,
values   = ~ population_density_sqmi,
title    = "Population Density",
opacity  = 1
) %>%
addFullscreenControl(pseudoFullscreen = FALSE)
station_territory_census_leaflet
station_territory_census_leaflet <- leaflet(station_territory_census_sf,
width = "100%",
height = "800px") %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(
fillColor   = ~ station_territory_census_pal(population_density_sqmi),
color       = "#444444",
weight      = 1,
fillOpacity = 0.5,
popup       = ~ paste0("Station: ", station_number,
"<br>Population: ", formatC(round(total_pop_estimate_w), big.mark=','), " ±", round(total_pop_moe_w),
"<br>Area (sq mi): ", formatC(round(area_sqmi), big.mark=','),
"<br>Population Density: ", formatC(round(population_density_sqmi), big.mark=','), " ±", round(population_density_moe_sqmi)),
label       = ~ station_number,
highlightOptions = highlightOptions(
weight = 3,
color = "#666",
bringToFront = TRUE
)
) %>%
addLegend(
position = "bottomright",
pal      = station_territory_census_pal,
values   = ~ population_density_sqmi,
title    = "Population Density",
opacity  = 1
) %>%
addFullscreenControl(pseudoFullscreen = FALSE)
station_territory_census_leaflet
station_territory_census_leaflet <- leaflet(station_territory_census_sf,
width = "100%",
height = "800px") %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(
fillColor   = ~ station_territory_census_pal(population_density_sqmi),
color       = "#444444",
weight      = 1,
fillOpacity = 0.5,
popup       = ~ paste0("Station ", station_number,
"<br>Population: ", formatC(round(total_pop_estimate_w), big.mark=','), " ±", round(total_pop_moe_w),
"<br>Area (sq mi): ", formatC(round(area_sqmi), big.mark=','),
"<br>Population Density: ", formatC(round(population_density_sqmi), big.mark=','), " ±", round(population_density_moe_sqmi)),
label       = ~ station_number,
highlightOptions = highlightOptions(
weight = 3,
color = "#666",
bringToFront = TRUE
)
) %>%
addLegend(
position = "bottomright",
pal      = station_territory_census_pal,
values   = ~ population_density_sqmi,
title    = "Population Density",
opacity  = 1
) %>%
addFullscreenControl(pseudoFullscreen = FALSE)
station_territory_census_leaflet
station_territory_census_leaflet <- leaflet(station_territory_census_sf,
width = "100%",
height = "800px") %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(
fillColor   = ~ station_territory_census_pal(population_density_sqmi),
color       = "#444444",
weight      = 1,
fillOpacity = 0.5,
popup       = ~ paste0("Station ", station_number,
"<br>Population: ", formatC(round(total_pop_estimate_w), format = "f", big.mark=','), " ±", round(total_pop_moe_w),
"<br>Area (sq mi): ", round(area_sqmi, 1),
"<br>Population Density: ", formatC(round(population_density_sqmi), big.mark=','), " ±", round(population_density_moe_sqmi)),
label       = ~ station_number,
highlightOptions = highlightOptions(
weight = 3,
color = "#666",
bringToFront = TRUE
)
) %>%
addLegend(
position = "bottomright",
pal      = station_territory_census_pal,
values   = ~ population_density_sqmi,
title    = "Population Density",
opacity  = 1
) %>%
addFullscreenControl(pseudoFullscreen = FALSE)
station_territory_census_leaflet
station_territory_census_leaflet <- leaflet(station_territory_census_sf,
width = "100%",
height = "800px") %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(
fillColor   = ~ station_territory_census_pal(population_density_sqmi),
color       = "#444444",
weight      = 1,
fillOpacity = 0.5,
popup       = ~ paste0("Station ", station_number,
"<br>Population: ", formatC(round(total_pop_estimate_w), format = "f", digits = 0, big.mark=','), " ±", round(total_pop_moe_w),
"<br>Area (sq mi): ", round(area_sqmi, 1),
"<br>Population Density: ", formatC(round(population_density_sqmi), big.mark=','), " ±", round(population_density_moe_sqmi)),
label       = ~ station_number,
highlightOptions = highlightOptions(
weight = 3,
color = "#666",
bringToFront = TRUE
)
) %>%
addLegend(
position = "bottomright",
pal      = station_territory_census_pal,
values   = ~ population_density_sqmi,
title    = "Population Density",
opacity  = 1
) %>%
addFullscreenControl(pseudoFullscreen = FALSE)
station_territory_census_leaflet
station_territory_census_breaks <- pretty(station_territory_census_sf$population_density_sqmi, n = 10)
station_territory_census_pal <- colorBin(
palette = viridis(256),
na.color = "#CCCCCC",
bins = station_territory_census_breaks,
domain = station_territory_census_sf$population_density_sqmi
)
station_territory_census_leaflet <- leaflet(station_territory_census_sf,
width = "100%",
height = "800px") %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(
fillColor   = ~ station_territory_census_pal(population_density_sqmi),
color       = "#444444",
weight      = 1,
fillOpacity = 0.5,
popup       = ~ paste0("Station ", station_number,
"<br>Population: ", formatC(round(total_pop_estimate_w), format = "f", digits = 0, big.mark=','), " ± ", round(total_pop_moe_w),
"<br>Area: ", round(area_sqmi, 1), " sq mi",
"<br>Population Density: ", formatC(round(population_density_sqmi), big.mark=','), " ± ", round(population_density_moe_sqmi), " pop/sq mi"),
label       = ~ station_number,
highlightOptions = highlightOptions(
weight = 3,
color = "#666",
bringToFront = TRUE
)
) %>%
addLegend(
position = "bottomright",
pal      = station_territory_census_pal,
values   = ~ population_density_sqmi,
title    = "Population Density",
opacity  = 1
) %>%
addFullscreenControl(pseudoFullscreen = FALSE)
station_territory_census_leaflet
